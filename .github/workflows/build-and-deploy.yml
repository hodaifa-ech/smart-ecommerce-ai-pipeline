name: Build and Deploy to Minikube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: ${{ github.repository_owner }}/ecommerce-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/ecommerce-app:${{ github.sha }},${{ env.DOCKER_USERNAME }}/ecommerce-app:latest

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Create GROQ Secret
      run: |
        kubectl create namespace ecommerce --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic groq-secret \
          --namespace ecommerce \
          --from-literal=api-key="${{ secrets.GROQ_API_KEY }}" \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to Minikube
      run: |
        # Create deployment
        cat <<EOF | kubectl apply -f -
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ecommerce-app
          namespace: ecommerce
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: ecommerce-app
          template:
            metadata:
              labels:
                app: ecommerce-app
            spec:
              containers:
              - name: ecommerce-app
                image: ${{ env.DOCKER_USERNAME }}/ecommerce-app:${{ github.sha }}
                ports:
                - containerPort: 8501
                env:
                - name: GROQ_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: groq-secret
                      key: api-key
        EOF

        # Create service
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Service
        metadata:
          name: ecommerce-service
          namespace: ecommerce
        spec:
          selector:
            app: ecommerce-app
          ports:
          - port: 80
            targetPort: 8501
          type: NodePort
        EOF

    - name: Verify Deployment
      run: |
        echo "Waiting for deployment to be ready..."
        kubectl rollout status deployment/ecommerce-app -n ecommerce --timeout=300s
        
        echo "Deployment status:"
        kubectl get pods -n ecommerce
        
        echo "Service status:"
        kubectl get svc -n ecommerce
        
        echo "Minikube IP: $(minikube ip)"
        echo "Service URL: http://$(minikube ip):$(kubectl get svc ecommerce-service -n ecommerce -o jsonpath='{.spec.ports[0].nodePort}')" 