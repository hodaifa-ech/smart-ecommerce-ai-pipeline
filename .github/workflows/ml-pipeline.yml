name: ML Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --no-cache-dir -r kubeflow_pipelines/requirements.txt
        pip install --no-cache-dir pytest
    
    - name: Run tests
      run: |
        pytest tests/ -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./kubeflow_pipelines
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/smart-ecommerce-ml:latest

  deploy-to-local:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v1
    
    - name: Set up Minikube
      uses: medyagh/setup-minikube@master
    
    - name: Deploy to Minikube
      run: |
        # Start Minikube
        minikube start
        
        # Point to Minikube's Docker daemon
        eval $(minikube docker-env)
        
        # Pull the latest image
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smart-ecommerce-ml:latest
        
        # Tag the image for local use
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/smart-ecommerce-ml:latest smart-ecommerce-ai-pipeline:latest
        
        # Apply Kubernetes configurations
        kubectl apply -f kubeflow_pipelines/mlops-config.yaml
        kubectl apply -f kubeflow_pipelines/deployment.yaml
        kubectl apply -f kubeflow_pipelines/pipeline.yaml
        
        # Wait for deployment
        kubectl rollout status deployment/smart-ecommerce-app -n kubeflow
        
        # Port forward Kubeflow UI
        kubectl port-forward svc/ml-pipeline-ui 8081:80 -n kubeflow &
        
        # Wait for port forwarding to be ready
        sleep 10
        
        # Run the pipeline
        python3 kubeflow_pipelines/automate_pipeline.py 