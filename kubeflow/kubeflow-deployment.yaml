apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeflow-pipeline
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeflow-pipeline
  template:
    metadata:
      labels:
        app: kubeflow-pipeline
    spec:
      containers:
      - name: kubeflow-pipeline
        image: ${DOCKERHUB_USERNAME}/ecommerce-app:latest
        ports:
        - containerPort: 8501
        env:
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: groq-secret
              key: api-key
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: models-volume
          mountPath: /app/models
        - name: metrics-volume
          mountPath: /app/metrics
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: metrics-volume
        persistentVolumeClaim:
          claimName: metrics-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kubeflow-pipeline-service
  namespace: ecommerce
spec:
  selector:
    app: kubeflow-pipeline
  ports:
  - port: 80
    targetPort: 8501
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: ecommerce
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: ecommerce
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: metrics-pvc
  namespace: ecommerce
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 